import{_ as i,c as a,a0 as t,o as n}from"./chunks/framework.V6wbqQ68.js";const o=JSON.parse('{"title":"CSS 中隐藏页面元素的几种方式和区别","description":"","frontmatter":{},"headers":[],"relativePath":"guides/language-basic/CSS/7.CSS 中隐藏页面元素的几种方式和区别.md","filePath":"guides/language-basic/CSS/7.CSS 中隐藏页面元素的几种方式和区别.md"}'),e={name:"guides/language-basic/CSS/7.CSS 中隐藏页面元素的几种方式和区别.md"};function l(h,s,p,d,k,r){return n(),a("div",null,s[0]||(s[0]=[t(`<h1 id="css-中隐藏页面元素的几种方式和区别" tabindex="-1">CSS 中隐藏页面元素的几种方式和区别 <a class="header-anchor" href="#css-中隐藏页面元素的几种方式和区别" aria-label="Permalink to &quot;CSS 中隐藏页面元素的几种方式和区别&quot;">​</a></h1><h2 id="前言" tabindex="-1">前言 <a class="header-anchor" href="#前言" aria-label="Permalink to &quot;前言&quot;">​</a></h2><p>在平常的样式排版中，我们经常遇到将某个模块隐藏的场景，通过 css 隐藏的元素方法有很多种，它们看起来实现的效果是一致的，但实际上每一种方法都有一丝轻微的不同，这些不同决定了在一些特定场合下使用哪一种方法。</p><h2 id="实现方法综合" tabindex="-1">实现方法综合 <a class="header-anchor" href="#实现方法综合" aria-label="Permalink to &quot;实现方法综合&quot;">​</a></h2><p>通过 css 实现隐藏元素方法有如下：</p><ul><li>display：none</li><li>visibility：hidden</li><li>opacity：0</li><li>设置 height、width 模型属性为 0</li><li>position：absolute</li><li>clip-path</li></ul><h2 id="方法一-display-none" tabindex="-1">方法一：display：none <a class="header-anchor" href="#方法一-display-none" aria-label="Permalink to &quot;方法一：display：none&quot;">​</a></h2><p>display：none 是通常最实用的隐藏元素的方法</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.conceal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  display</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">none</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>将元素设置的 display：none，可以将元素在页面中彻底消失。</p><p>此元素原本所占据的位置，会被其他元素占据，也就是说它会导致浏览器的重排的重绘</p><p>消失后，自身绑定的事件不会触发，也不会有过渡效果</p><p><strong>特点：元素不可见，不占据空间，无法响应点击事件</strong></p><h2 id="方法二-visibility-hidden" tabindex="-1">方法二：visibility：hidden <a class="header-anchor" href="#方法二-visibility-hidden" aria-label="Permalink to &quot;方法二：visibility：hidden&quot;">​</a></h2><p>visibility：hidden 也是非常常用的一种隐藏方式，但是跟 display：none 大有不同</p><p>visibility：hidden 从页面上来看仅仅是隐藏该元素，DOM 结果依然会存在，只是处于一个不可见的状态。不会发生重排，但是会发生重绘。</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.conceal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  visibility</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">hidden</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>给人的效果是隐藏了，所以他的自身事件不会触发。</p><p><strong>特点：元素不可见，占据空间，无法响应点击事件</strong></p><h2 id="方法三-opacity-0" tabindex="-1">方法三: opacity：0 <a class="header-anchor" href="#方法三-opacity-0" aria-label="Permalink to &quot;方法三: opacity：0&quot;">​</a></h2><p>opacity 属性表示元素的透明度，将元素的透明度设置为 0 之后，在用户的严重，元素也是可以达到隐藏效果的 该方法不常用，不会引发重排，一般情况下也会引发重绘</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.conceal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  opacity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>它是存在于页面之上的，所以他自身的事件仍然是可以触发的，但被他遮挡的元素是不能触发其他事件的</p><p>注意：其子元素不能设置 opacity 来达到显示的效果</p><p><strong>特点：改变元素透明度，元素不可见，占据页面空间，可以响应点点击事件。</strong></p><h2 id="方法四-设置-height、width-模型属性为-0" tabindex="-1">方法四：设置 height、width 模型属性为 0 <a class="header-anchor" href="#方法四-设置-height、width-模型属性为-0" aria-label="Permalink to &quot;方法四：设置 height、width 模型属性为 0&quot;">​</a></h2><p>要用这种方法实现隐藏需将元素的 margin、border、padding、height 和 width 等影响元素盒模型的属性设置成 0，如果元素内有子元素的内容，还要设置其 overflow：hidden 来隐藏子元素</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.conceal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  margin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  border</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  padding</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  height</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  overflow</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">hidden</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p><strong>特点:元素不可见，不占据空间，无法响应点击事件</strong></p><h2 id="方法五-position-absolute" tabindex="-1">方法五：position：absolute <a class="header-anchor" href="#方法五-position-absolute" aria-label="Permalink to &quot;方法五：position：absolute&quot;">​</a></h2><p>肯定看到这里会很惊讶为什么定位也能隐藏，其实我也是翻阅了一些资料之后才知道的，是将元素移出页面，不可见，从而就达到了&quot;隐藏效果&quot;虽然用处也很多，但多数不是用于“隐藏”。</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.conceal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  position</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">absolute</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  top</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">-9999</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  left</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">-9999</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p><strong>特点:元素不可见，不影响布局</strong></p><h2 id="方法六-clip-path" tabindex="-1">方法六：clip-path <a class="header-anchor" href="#方法六-clip-path" aria-label="Permalink to &quot;方法六：clip-path&quot;">​</a></h2><p>clip-path 通过裁剪的形式</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.conceal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  clip-path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">polygon</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p><strong>特点:元素不可见，占据空间，无法响应点击事件</strong></p><h2 id="总结" tabindex="-1">总结： <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结：&quot;">​</a></h2><p>最常用的还是方法一和方法二，其他的方式只能算是一种小妙招吧，很偏，因为它们的真正用途并不是用于隐藏元素所以本人是不推荐使用它们的。</p><h2 id="区别" tabindex="-1">区别： <a class="header-anchor" href="#区别" aria-label="Permalink to &quot;区别：&quot;">​</a></h2><p>关于<code>display: none</code>、<code>visibility: hidden</code>、<code>opacity: 0</code>的区别，如下表所示：</p><table tabindex="0"><thead><tr><th style="text-align:center;"></th><th style="text-align:center;">display: none</th><th style="text-align:center;">visibility: hidden</th><th style="text-align:center;">opacity: 0</th></tr></thead><tbody><tr><td style="text-align:center;">页面中</td><td style="text-align:center;">不存在</td><td style="text-align:center;">存在</td><td style="text-align:center;">存在</td></tr><tr><td style="text-align:center;">重排</td><td style="text-align:center;">会</td><td style="text-align:center;">不会</td><td style="text-align:center;">不会</td></tr><tr><td style="text-align:center;">重绘</td><td style="text-align:center;">会</td><td style="text-align:center;">会</td><td style="text-align:center;">不一定</td></tr><tr><td style="text-align:center;">自身绑定事件</td><td style="text-align:center;">不触发</td><td style="text-align:center;">不触发</td><td style="text-align:center;">可触发</td></tr><tr><td style="text-align:center;">transition</td><td style="text-align:center;">不支持</td><td style="text-align:center;">支持</td><td style="text-align:center;">支持</td></tr><tr><td style="text-align:center;">子元素可复原</td><td style="text-align:center;">不能</td><td style="text-align:center;">能</td><td style="text-align:center;">不能</td></tr><tr><td style="text-align:center;">被遮挡的元素可触发事件</td><td style="text-align:center;">能</td><td style="text-align:center;">能</td><td style="text-align:center;">不能</td></tr></tbody></table><p><strong>继承</strong></p><p><code>diplay:none</code> 和 <code>opacity:0</code> ：是非继承属性，子孙节点消失由于元素从渲染树消失造成，通过修改子孙节点属性无法显示。</p><p><code>visibility:hidden</code>：是继承属性，子孙节点消失由于继承了 hidden，通过设置 <code>visibility:visible</code>; 可以让子孙节点显示。</p><p><strong>性能</strong></p><p><code>display:none</code>：修改元素会造成文档回流，读屏器读取 <code>display:none</code> 元素内容，性能消耗较大</p><p><code>visibility:hidden</code>：修改元素只会造成本元素的重绘，性能消耗较少，读屏器读取 <code>visibitlity:hidden</code> 元素内容</p><p><code>opacity:0</code>：修改元素会造成重绘，性能消耗较少</p>`,49)]))}const g=i(e,[["render",l]]);export{o as __pageData,g as default};
