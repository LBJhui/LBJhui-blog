import{_ as e,c as i,a0 as l,o as t}from"./chunks/framework.V6wbqQ68.js";const m=JSON.parse('{"title":"link 和 @import 导入外部样式表有何区别？","description":"","frontmatter":{},"headers":[],"relativePath":"guides/language-basic/CSS/3.link 和 @import 有何区别.md","filePath":"guides/language-basic/CSS/3.link 和 @import 有何区别.md"}'),c={name:"guides/language-basic/CSS/3.link 和 @import 有何区别.md"};function d(r,o,n,p,s,a){return t(),i("div",null,o[0]||(o[0]=[l('<h1 id="link-和-import-导入外部样式表有何区别" tabindex="-1">link 和 @import 导入外部样式表有何区别？ <a class="header-anchor" href="#link-和-import-导入外部样式表有何区别" aria-label="Permalink to &quot;link 和 @import 导入外部样式表有何区别？&quot;">​</a></h1><p>在前端开发中，<code>link</code>和<code>@import</code>都是用于导入外部样式表的方法，但它们之间存在一些关键的区别。以下是两者的主要区别：</p><ol><li><p><strong>语法与用法</strong>：</p><ul><li><code>link</code>：是一个 HTML 标签，它可以直接在 HTML 文档中使用，通过<code>href</code>属性指定外部样式表的 URL。例如：<code>&lt;link rel=&quot;stylesheet&quot; href=&quot;styles.css&quot;&gt;</code>。</li><li><code>@import</code>：是 CSS 的一个指令，它只能在 CSS 文件中使用，通过<code>@import</code>关键字和<code>url()</code>函数指定外部样式表的 URL。例如：<code>@import url(&quot;styles.css&quot;);</code>。</li></ul></li><li><p><strong>加载顺序</strong>：</p><ul><li><code>link</code>：在页面加载时，浏览器会同时加载和渲染<code>link</code>引用的外部样式表。</li><li><code>@import</code>：浏览器会在整个页面和 CSS 文件加载完成后，再加载<code>@import</code>引用的外部样式表。这可能会导致页面渲染的延迟。</li></ul></li><li><p><strong>兼容性</strong>：</p><ul><li><code>link</code>：在所有现代浏览器中都有良好的兼容性。</li><li><code>@import</code>：虽然大多数现代浏览器都支持<code>@import</code>，但在一些较旧的浏览器中可能存在兼容性问题，特别是旧版本的 Internet Explorer。</li></ul></li><li><p><strong>权重与覆盖</strong>：</p><ul><li>由于<code>link</code>引用的样式表在页面加载时即被加载和渲染，因此它们具有更高的权重。如果有相同的样式规则，<code>link</code>引用的样式表将覆盖<code>@import</code>引用的样式表中的规则。</li></ul></li><li><p><strong>使用场景</strong>：</p><ul><li><code>link</code>：更常用，特别是在 HTML 文档中直接引用外部样式表时。它也支持在 HTML 中同时引用多个外部样式表。</li><li><code>@import</code>：可以在 CSS 文件中使用，以引入其他 CSS 文件或媒体查询。然而，由于加载顺序和兼容性问题，它的使用场景相对较少。</li></ul></li><li><p><strong>性能考虑</strong>：</p><ul><li>使用<code>@import</code>可能会导致页面渲染的延迟，因为它是在页面和 CSS 文件加载完成后才加载样式表的。这可能会影响到用户体验。</li><li>另一方面，<code>link</code>标签由于在页面加载时即加载样式表，因此通常具有更好的性能。</li></ul></li></ol><p>综上所述，尽管<code>@import</code>和<code>link</code>都可以用于导入外部样式表，但在实际开发中，<code>link</code>标签由于更好的兼容性、加载顺序和性能，通常被更广泛地使用。</p>',4)]))}const k=e(c,[["render",d]]);export{m as __pageData,k as default};
