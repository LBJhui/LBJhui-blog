import{_ as e,c as t,a0 as s,o as i}from"./chunks/framework.V6wbqQ68.js";const k=JSON.parse('{"title":"第 24 章 网络请求与远程资源","description":"","frontmatter":{},"headers":[],"relativePath":"website/language/JavaScript/High-Performance JavaScript/第24章 网络请求与远程资源.md","filePath":"website/language/JavaScript/High-Performance JavaScript/第24章 网络请求与远程资源.md"}'),r={name:"website/language/JavaScript/High-Performance JavaScript/第24章 网络请求与远程资源.md"};function n(h,a,p,l,o,c){return i(),t("div",null,a[0]||(a[0]=[s('<h1 id="第-24-章-网络请求与远程资源" tabindex="-1">第 24 章 网络请求与远程资源 <a class="header-anchor" href="#第-24-章-网络请求与远程资源" aria-label="Permalink to &quot;第 24 章 网络请求与远程资源&quot;">​</a></h1><h2 id="_24-1-xmlhttprequest-对象" tabindex="-1">24.1 XMLHttpRequest 对象 <a class="header-anchor" href="#_24-1-xmlhttprequest-对象" aria-label="Permalink to &quot;24.1 XMLHttpRequest 对象&quot;">​</a></h2><p>所有现代浏览器都通过 <code>XMLHttpRequest</code> 构造函数原生支持 XHR 对象：</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> xhr </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> XMLHttpRequest</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><h3 id="_24-1-1-使用-xhr" tabindex="-1">24.1.1 使用 XHR <a class="header-anchor" href="#_24-1-1-使用-xhr" aria-label="Permalink to &quot;24.1.1 使用 XHR&quot;">​</a></h3>',5)]))}const u=e(r,[["render",n]]);export{k as __pageData,u as default};
