import{_ as i,c as a,a0 as t,o as e}from"./chunks/framework.V6wbqQ68.js";const o=JSON.parse('{"title":"Vue 小点知识","description":"","frontmatter":{},"headers":[],"relativePath":"guides/framework/Vue/README.md","filePath":"guides/framework/Vue/README.md"}'),h={name:"guides/framework/Vue/README.md"};function l(n,s,p,k,r,d){return e(),a("div",null,s[0]||(s[0]=[t('<h1 id="vue-小点知识" tabindex="-1">Vue 小点知识 <a class="header-anchor" href="#vue-小点知识" aria-label="Permalink to &quot;Vue 小点知识&quot;">​</a></h1><h2 id="静态资源的动态访问" tabindex="-1">静态资源的动态访问 <a class="header-anchor" href="#静态资源的动态访问" aria-label="Permalink to &quot;静态资源的动态访问&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 打包后每个图片生成对应的 js 文件</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">`./assests/${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">val</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}.png`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">then</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">res</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  res.default</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 打包只有图片</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> url</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> URL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">`./assests/${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">val</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}.png`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">meta</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.url)</span></span></code></pre></div><h2 id="v-html-添加的内容-css-样式不起作用" tabindex="-1">v-html 添加的内容，css 样式不起作用 <a class="header-anchor" href="#v-html-添加的内容-css-样式不起作用" aria-label="Permalink to &quot;v-html 添加的内容，css 样式不起作用&quot;">​</a></h2><p>在用 vue 给标签内添加需要浏览器解析的文本内容时候，我们通常要用到 v-html 标签，但是用了这个标签后，我们无法对其内部标签的样式进行设置，那是因为，v-html 相当于引入外部组件内容。</p><p>现在我们用的 sylte 都会包括 scoped 标签，这个是私有属性的标签，所以我们要新建一个样式，将 scoped 标签去掉，将样式写在这里面就可以了。</p><h2 id="介绍一下-spa-以及-spa-有什么缺点" tabindex="-1">介绍一下 SPA 以及 SPA 有什么缺点 <a class="header-anchor" href="#介绍一下-spa-以及-spa-有什么缺点" aria-label="Permalink to &quot;介绍一下 SPA 以及 SPA 有什么缺点&quot;">​</a></h2><p>SPA 是什么？单页面应用</p><p>缺点：</p><ol><li>SEO 优化不好</li><li>性能不是特别好</li></ol>',10)]))}const g=i(h,[["render",l]]);export{o as __pageData,g as default};
