import{_ as o,c as a,a0 as e,o as l}from"./chunks/framework.V6wbqQ68.js";const u=JSON.parse('{"title":"点击穿透","description":"","frontmatter":{},"headers":[],"relativePath":"guides/language-basic/JavaScript/2.点击穿透.md","filePath":"guides/language-basic/JavaScript/2.点击穿透.md"}'),r={name:"guides/language-basic/JavaScript/2.点击穿透.md"};function s(i,t,c,n,p,d){return l(),a("div",null,t[0]||(t[0]=[e('<h1 id="点击穿透" tabindex="-1">点击穿透 <a class="header-anchor" href="#点击穿透" aria-label="Permalink to &quot;点击穿透&quot;">​</a></h1><p>点击穿透（Click Through）是一个在前端开发中常见的问题，特别是在处理移动端或触屏设备的交互时。它通常发生在用户点击一个浮层（如弹窗、下拉菜单等）的关闭按钮时，由于某些原因，点击事件不仅触发了浮层的关闭，还“穿透”到了浮层下方的页面元素上，导致该元素也被点击。</p><h2 id="原因分析" tabindex="-1">原因分析 <a class="header-anchor" href="#原因分析" aria-label="Permalink to &quot;原因分析&quot;">​</a></h2><p>点击穿透问题在移动端尤为常见，这主要是因为触屏设备为了区分用户的双击缩放操作，对 click 事件做了 300ms 的延迟触发。具体流程如下：</p><ol><li><strong>touchstart</strong>：手指触碰到屏幕时触发。</li><li><strong>touchmove</strong>（可选）：手指在屏幕上移动时触发。</li><li><strong>touchend</strong>：手指离开屏幕时触发。</li><li><strong>click</strong>（延迟 300ms 后）：如果在这 300ms 内没有新的触摸事件，浏览器会在 touchend 发生的位置触发 click 事件。</li></ol><p>如果浮层在 touchstart 或 touchend 时就被关闭，而用户的手指在 touchend 后仍然停留在屏幕上，那么 300ms 后触发的 click 事件就可能落在浮层下方的元素上，导致点击穿透。</p><h2 id="解决方案" tabindex="-1">解决方案 <a class="header-anchor" href="#解决方案" aria-label="Permalink to &quot;解决方案&quot;">​</a></h2><p>针对点击穿透问题，可以采取以下几种解决方案：</p><ol><li><strong>使用 touchstart 代替 click</strong>：</li></ol><p>将浮层关闭的事件绑定到 touchstart 上，而不是 click。这样可以确保在用户手指离开屏幕时浮层就已经关闭，从而避免 click 事件的触发。</p><ol start="2"><li><strong>阻止默认事件</strong>：</li></ol><p>在 touchstart 或 touchend 事件中调用<code>e.preventDefault()</code>来阻止默认事件的进一步传播，包括后续的 click 事件。</p><ol start="3"><li><strong>延长浮层关闭时间</strong>：</li></ol><p>通过 CSS 动画或 JavaScript 延时函数（如 setTimeout）来延长浮层关闭的时间，确保在 click 事件触发前浮层仍然可见。这样，即使 click 事件被触发，也会落在浮层上而不是下方的元素上。</p><ol start="4"><li><strong>使用 pointer-events</strong>：</li></ol><p>对于不需要响应点击事件的浮层背景或遮罩层，可以设置 CSS 属性<code>pointer-events: none;</code>。这样，这些元素就不会成为点击事件的目标，从而避免点击穿透。但需要注意的是，IE 浏览器不支持此属性。</p><ol start="5"><li><strong>优化事件处理逻辑</strong>：</li></ol><p>确保事件处理逻辑的正确性，避免在浮层关闭后立即触发下方元素的点击事件。可以通过添加标志位或使用事件委托等方式来优化事件处理逻辑。</p><ol start="6"><li><strong>引入第三方库</strong></li></ol><p>FastClick 是专门未解决移动端浏览器 300ms 点击延迟和点击穿透问题所开发的一个轻量级的库。<strong>FastClick 实现原理</strong>是在检测到 touchend 事件的时候，会通过 DOM 自定义事件立即发出模拟一个 click 事件，并把浏览器在 300ms 之后的 click 事件阻止掉。</p><p>综上所述，点击穿透问题是一个需要开发者注意的问题，特别是在移动端开发中。通过合理的解决方案，可以有效地避免这一问题的发生，提升用户体验。</p>',21)]))}const h=o(r,[["render",s]]);export{u as __pageData,h as default};
