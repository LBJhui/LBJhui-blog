import{_ as t,c as e,a0 as i,o as r}from"./chunks/framework.V6wbqQ68.js";const u=JSON.parse('{"title":"JavaScript 小点知识","description":"","frontmatter":{},"headers":[],"relativePath":"guides/language-basic/JavaScript/README.md","filePath":"guides/language-basic/JavaScript/README.md"}'),s={name:"guides/language-basic/JavaScript/README.md"};function o(l,a,n,c,d,p){return r(),e("div",null,a[0]||(a[0]=[i('<h1 id="javascript-小点知识" tabindex="-1">JavaScript 小点知识 <a class="header-anchor" href="#javascript-小点知识" aria-label="Permalink to &quot;JavaScript 小点知识&quot;">​</a></h1><h2 id="惰性函数" tabindex="-1">惰性函数 <a class="header-anchor" href="#惰性函数" aria-label="Permalink to &quot;惰性函数&quot;">​</a></h2><p>惰性加载表示函数执行的分支只会在函数第一次调用的时候执行，在第一次调用的过程中，该函数被覆盖为另一个按照合适的方式执行的函数，这样任何对原函数的调用就不用再经过执行的分支了</p><h2 id="纯函数" tabindex="-1">纯函数 <a class="header-anchor" href="#纯函数" aria-label="Permalink to &quot;纯函数&quot;">​</a></h2><ol><li>确定性：对于相同的输入，纯函数总是产生<strong>相同的输出</strong></li><li>无副作用：纯函数不会修改<strong>其外部环境</strong>，包括全局变量、输入参数对象等</li></ol><h2 id="tips" tabindex="-1">tips <a class="header-anchor" href="#tips" aria-label="Permalink to &quot;tips&quot;">​</a></h2><ul><li>块级作用域里不能声明函数，可以写函数表达式</li></ul>',7)]))}const g=t(s,[["render",o]]);export{u as __pageData,g as default};
