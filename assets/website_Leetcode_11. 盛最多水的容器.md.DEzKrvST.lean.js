import{_ as s,c as a,a0 as h,o as e}from"./chunks/framework.V6wbqQ68.js";const g=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"website/Leetcode/11. 盛最多水的容器.md","filePath":"website/Leetcode/11. 盛最多水的容器.md"}'),t={name:"website/Leetcode/11. 盛最多水的容器.md"};function n(p,i,k,l,d,r){return e(),a("div",null,i[0]||(i[0]=[h(`<p><a href="https://leetcode.cn/problems/container-with-most-water/" target="_blank" rel="noreferrer">11. 盛最多水的容器</a></p><p>首先来看下水量怎么计算~</p><p>计算水量其实也就是计算面积，按照示例 1：<code>height：[1,8,6,2,5,4,8,3,7]</code>。</p><p><img src="https://pic.leetcode.cn/1693045106-jRxEKm-image.png" alt="image.png" loading="lazy"></p><p>随便选取两条线 <code>height[i]</code> 与 <code>height[j]</code>，它们之间的距离为 <code>j - i</code>，由木桶效应可以得知水量应由短的那条线计算出，看成面积就是：</p><p><code>area=min(height[i],height[j])×(j−i)</code></p><ul><li>木桶效应：也可称为短板效应，是讲一只水桶能装多少水取决于它最短的那块木板。</li></ul><p>然后思考应该怎么找到让其水量最大的两条线~</p><p>水量最大也就是面积最大，我们可以先让 <code>j - i</code> 最大，也就是先选取左右两侧最边上的两条线，从外向里找起。我们假设 <code>height[i]</code> 这条线长一些，即 <code>height[i] &gt; heigth[j]</code>，移动 <code>i</code> 或者移动 <code>j</code> 可以分情况考虑：</p><ul><li>移动 <code>i</code> 即 <code>i = i + 1</code>：此时 <code>j - i</code> 肯定会变小，那么 <code>height[i + 1]</code> 即使变大了，但由于面积取决于短的那条线 <code>height[j]</code>，面积肯定也会减少。</li><li>移动 <code>j</code> 即 <code>j = j - 1</code>：此时 <code>j - i</code> 虽然肯定变小，但是可能 <code>height [j - 1]</code> 比原来大了，那么最终的面积有可能变大。</li></ul><p>因此我们可以使用双指针指向左右两侧，每次向里移动 <code>height</code> 较小的指针，试图找到一个更大的面积。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> {number[]}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> height</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@return</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> {number}</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> maxArea</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">height</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> res </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, j </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> height.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">length</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> j; ) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    res </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Math.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">max</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(res, Math.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">min</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(height[i], height[j]) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (j </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> i))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    height[i] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> height[j] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">++</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> :</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> j</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">--</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> res</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div>`,12)]))}const c=s(t,[["render",n]]);export{g as __pageData,c as default};
